{"ast":null,"code":"import _objectSpread from\"G:/NFT PROJECT/CANDY MACHINE DEVNET/SnakeRS devnet/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"G:/NFT PROJECT/CANDY MACHINE DEVNET/SnakeRS devnet/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"G:/NFT PROJECT/CANDY MACHINE DEVNET/SnakeRS devnet/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"G:/NFT PROJECT/CANDY MACHINE DEVNET/SnakeRS devnet/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3;import _regeneratorRuntime from\"G:\\\\NFT PROJECT\\\\CANDY MACHINE DEVNET\\\\SnakeRS devnet\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{useEffect,useMemo,useState,useCallback}from\"react\";import styled from\"styled-components\";import{Container,Snackbar,CircularProgress}from\"@material-ui/core\";import Paper from\"@material-ui/core/Paper\";import Alert from\"@material-ui/lab/Alert\";import{PublicKey}from\"@solana/web3.js\";import{useWallet}from\"@solana/wallet-adapter-react\";import{WalletDialogButton}from\"@solana/wallet-adapter-material-ui\";import{awaitTransactionSignatureConfirmation,CANDY_MACHINE_PROGRAM,getCandyMachineState,mintOneToken}from\"./candy-machine\";import{checkWLToken}from\"./utils/checkWLToken\";import{Header}from\"./Header\";import{MintButton}from\"./MintButton\";import{GatewayProvider}from\"@civic/solana-gateway-react\";import{usePoller}from\"./hooks/usePoller\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var IMAGE_LINK=\"/animation.gif\";var LOGO_LINK=\"/logo.png\";var ConnectButton=styled(WalletDialogButton)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 60px;\\n  margin-top: 0px;\\n  margin-bottom: 0px;\\n  border-radius: 20px;\\n  background: linear-gradient(29deg, #34342f 0%, #44c3a1 100%);\\n  color: white;\\n  font-size: 16px;\\n  font-weight: bold;\\n\"])));var StyledPaper=styled(Paper)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  padding: 10px;\\n  background: rgb(47,47,47);\\n  background: linear-gradient(162deg, rgba(47,47,47,1) 0%, rgba(15,15,15,1) 100%);\\n  border-radius: 30px;\\n  margin: 10px;\\n\"])));var MintContainer=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\"])));// add your owns styles here\nvar Home=function Home(props){var _candyMachine$state,_candyMachine$state$g;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isUserMinting=_useState2[0],setIsUserMinting=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),candyMachine=_useState4[0],setCandyMachine=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),userHasWhitelistToken=_useState6[0],setUserHasWhitelistToken=_useState6[1];var _useState7=useState({open:false,message:\"\",severity:undefined}),_useState8=_slicedToArray(_useState7,2),alertState=_useState8[0],setAlertState=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),loading=_useState10[0],setLoading=_useState10[1];var rpcUrl=props.rpcHost;var wallet=useWallet();var anchorWallet=useMemo(function(){if(!wallet||!wallet.publicKey||!wallet.signAllTransactions||!wallet.signTransaction){return;}return{publicKey:wallet.publicKey,signAllTransactions:wallet.signAllTransactions,signTransaction:wallet.signTransaction};},[wallet]);var refreshCandyMachineState=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _cndy$state,_cndy$state$whitelist,cndy,WLToken;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(anchorWallet){_context.next=2;break;}return _context.abrupt(\"return\");case 2:if(!props.candyMachineId){_context.next=19;break;}_context.prev=3;_context.next=6;return getCandyMachineState(anchorWallet,props.candyMachineId,props.connection);case 6:cndy=_context.sent;setCandyMachine(cndy);_context.next=10;return checkWLToken(props.connection,anchorWallet.publicKey,cndy===null||cndy===void 0?void 0:(_cndy$state=cndy.state)===null||_cndy$state===void 0?void 0:(_cndy$state$whitelist=_cndy$state.whitelistMintSettings)===null||_cndy$state$whitelist===void 0?void 0:_cndy$state$whitelist.mint);case 10:WLToken=_context.sent;WLToken?setUserHasWhitelistToken(true):setUserHasWhitelistToken(false);setLoading(false);_context.next=19;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](3);console.log(\"There was a problem fetching Candy Machine state\");console.log(_context.t0);case 19:case\"end\":return _context.stop();}}},_callee,null,[[3,15]]);})),[anchorWallet,props.candyMachineId,props.connection]);var pollTime;usePoller(function(){refreshCandyMachineState();},pollTime?pollTime:9999);var onMint=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _document$getElementB,mintTxId,status,message;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;setIsUserMinting(true);(_document$getElementB=document.getElementById(\"#identity\"))===null||_document$getElementB===void 0?void 0:_document$getElementB.click();if(!(wallet.connected&&candyMachine!==null&&candyMachine!==void 0&&candyMachine.program&&wallet.publicKey)){_context2.next=13;break;}_context2.next=6;return mintOneToken(candyMachine,wallet.publicKey);case 6:mintTxId=_context2.sent[0];status={err:true};if(!mintTxId){_context2.next=12;break;}_context2.next=11;return awaitTransactionSignatureConfirmation(mintTxId,props.txTimeout,props.connection,true);case 11:status=_context2.sent;case 12:if(status&&!status.err){setAlertState({open:true,message:\"Congratulations! Mint succeeded!\",severity:\"success\"});}else{setAlertState({open:true,message:\"Mint failed! Please try again!\",severity:\"error\"});}case 13:_context2.next=20;break;case 15:_context2.prev=15;_context2.t0=_context2[\"catch\"](0);message=_context2.t0.msg||\"Minting failed! Please try again!\";if(!_context2.t0.msg){if(!_context2.t0.message){message=\"Transaction Timeout! Please try again.\";}else if(_context2.t0.message.indexOf(\"0x137\")){message=\"SOLD OUT!\";}else if(_context2.t0.message.indexOf(\"0x135\")){message=\"Insufficient funds to mint. Please fund your wallet.\";}}else{if(_context2.t0.code===311){message=\"SOLD OUT!\";window.location.reload();}else if(_context2.t0.code===312){message=\"Minting period hasn't started yet.\";}}setAlertState({open:true,message:message,severity:\"error\"});case 20:_context2.prev=20;setIsUserMinting(false);return _context2.finish(20);case 23:case\"end\":return _context2.stop();}}},_callee2,null,[[0,15,20,23]]);}));return function onMint(){return _ref2.apply(this,arguments);};}();useEffect(function(){refreshCandyMachineState();},[anchorWallet,props.candyMachineId,props.connection,refreshCandyMachineState]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Container,{style:{marginTop:30},children:[/*#__PURE__*/_jsxs(Container,{maxWidth:\"sm\",style:{position:\"relative\"},children:[/*#__PURE__*/_jsxs(StyledPaper,{children:[\" \",/*#__PURE__*/_jsx(\"img\",{src:LOGO_LINK,alt:\"\",width:\"100%\",style:{borderRadius:\"5px\"}})]}),/*#__PURE__*/_jsx(StyledPaper,{children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{src:IMAGE_LINK,alt:\"\",width:\"100%\",style:{borderRadius:\"30px\"}})})}),/*#__PURE__*/_jsx(StyledPaper,{children:!wallet.connected?/*#__PURE__*/_jsx(ConnectButton,{children:\"Connect Wallet\"}):loading?/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",justifyContent:\"center\",width:\"100%\"},children:/*#__PURE__*/_jsx(CircularProgress,{})}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{candyMachine:candyMachine,refreshCandyMachineState:refreshCandyMachineState}),/*#__PURE__*/_jsx(MintContainer,{children:candyMachine!==null&&candyMachine!==void 0&&candyMachine.state.isActive&&candyMachine!==null&&candyMachine!==void 0&&candyMachine.state.gatekeeper&&wallet.publicKey&&wallet.signTransaction?/*#__PURE__*/_jsx(GatewayProvider,{wallet:{publicKey:wallet.publicKey||new PublicKey(CANDY_MACHINE_PROGRAM),//@ts-ignore\nsignTransaction:wallet.signTransaction},gatekeeperNetwork:candyMachine===null||candyMachine===void 0?void 0:(_candyMachine$state=candyMachine.state)===null||_candyMachine$state===void 0?void 0:(_candyMachine$state$g=_candyMachine$state.gatekeeper)===null||_candyMachine$state$g===void 0?void 0:_candyMachine$state$g.gatekeeperNetwork,clusterUrl:rpcUrl,options:{autoShowModal:false},children:/*#__PURE__*/_jsx(MintButton,{candyMachine:candyMachine,isMinting:isUserMinting,onMint:onMint,userHasWhitelistToken:userHasWhitelistToken})}):/*#__PURE__*/_jsx(MintButton,{candyMachine:candyMachine,isMinting:isUserMinting,onMint:onMint,userHasWhitelistToken:userHasWhitelistToken})})]})})]}),/*#__PURE__*/_jsx(Snackbar,{open:alertState.open,autoHideDuration:6000,onClose:function onClose(){return setAlertState(_objectSpread(_objectSpread({},alertState),{},{open:false}));},children:/*#__PURE__*/_jsx(Alert,{onClose:function onClose(){return setAlertState(_objectSpread(_objectSpread({},alertState),{},{open:false}));},severity:alertState.severity,children:alertState.message})})]})});};export default Home;","map":{"version":3,"sources":["G:/NFT PROJECT/CANDY MACHINE DEVNET/SnakeRS devnet/src/Home.tsx"],"names":["useEffect","useMemo","useState","useCallback","styled","Container","Snackbar","CircularProgress","Paper","Alert","PublicKey","useWallet","WalletDialogButton","awaitTransactionSignatureConfirmation","CANDY_MACHINE_PROGRAM","getCandyMachineState","mintOneToken","checkWLToken","Header","MintButton","GatewayProvider","usePoller","IMAGE_LINK","LOGO_LINK","ConnectButton","StyledPaper","MintContainer","div","Home","props","isUserMinting","setIsUserMinting","candyMachine","setCandyMachine","userHasWhitelistToken","setUserHasWhitelistToken","open","message","severity","undefined","alertState","setAlertState","loading","setLoading","rpcUrl","rpcHost","wallet","anchorWallet","publicKey","signAllTransactions","signTransaction","refreshCandyMachineState","candyMachineId","connection","cndy","state","whitelistMintSettings","mint","WLToken","console","log","pollTime","onMint","document","getElementById","click","connected","program","mintTxId","status","err","txTimeout","msg","indexOf","code","window","location","reload","marginTop","position","borderRadius","display","justifyContent","width","isActive","gatekeeper","gatekeeperNetwork","autoShowModal"],"mappings":"wvBAAA,OAASA,SAAT,CAAoBC,OAApB,CAA6BC,QAA7B,CAAuCC,WAAvC,KAA0D,OAA1D,CAGA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,SAAT,CAAoBC,QAApB,CAA8BC,gBAA9B,KAAsD,mBAAtD,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,wBAAlB,CACA,OAASC,SAAT,KAA0B,iBAA1B,CACA,OAASC,SAAT,KAA0B,8BAA1B,CACA,OAASC,kBAAT,KAAmC,oCAAnC,CACA,OACEC,qCADF,CAGEC,qBAHF,CAIEC,oBAJF,CAKEC,YALF,KAMO,iBANP,CAQA,OAAQC,YAAR,KAA4B,sBAA5B,CACA,OAASC,MAAT,KAAuB,UAAvB,CACA,OAASC,UAAT,KAA2B,cAA3B,CACA,OAASC,eAAT,KAAgC,6BAAhC,CACA,OAASC,SAAT,KAA0B,mBAA1B,C,6IAEA,GAAMC,CAAAA,UAAU,CAAG,gBAAnB,CACA,GAAMC,CAAAA,SAAS,CAAG,WAAlB,CAEA,GAAMC,CAAAA,aAAa,CAAGpB,MAAM,CAACQ,kBAAD,CAAT,mSAAnB,CAYA,GAAMa,CAAAA,WAAW,CAAGrB,MAAM,CAACI,KAAD,CAAT,kPAAjB,CAOA,GAAMkB,CAAAA,aAAa,CAAGtB,MAAM,CAACuB,GAAV,mEAAnB,CAAoC;AAUpC,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,KAAD,CAAsB,+CACjC,cAA0C3B,QAAQ,CAAC,KAAD,CAAlD,wCAAO4B,aAAP,eAAsBC,gBAAtB,eACA,eAAwC7B,QAAQ,EAAhD,yCAAO8B,YAAP,eAAqBC,eAArB,eACA,eAA0D/B,QAAQ,CAAC,KAAD,CAAlE,yCAAOgC,qBAAP,eAA8BC,wBAA9B,eACA,eAAoCjC,QAAQ,CAAa,CACvDkC,IAAI,CAAE,KADiD,CAEvDC,OAAO,CAAE,EAF8C,CAGvDC,QAAQ,CAAEC,SAH6C,CAAb,CAA5C,yCAAOC,UAAP,eAAmBC,aAAnB,eAKA,eAA8BvC,QAAQ,CAAC,IAAD,CAAtC,0CAAOwC,OAAP,gBAAgBC,UAAhB,gBACA,GAAMC,CAAAA,MAAM,CAAGf,KAAK,CAACgB,OAArB,CACA,GAAMC,CAAAA,MAAM,CAAGnC,SAAS,EAAxB,CAEA,GAAMoC,CAAAA,YAAY,CAAG9C,OAAO,CAAC,UAAM,CACjC,GACE,CAAC6C,MAAD,EACA,CAACA,MAAM,CAACE,SADR,EAEA,CAACF,MAAM,CAACG,mBAFR,EAGA,CAACH,MAAM,CAACI,eAJV,CAKE,CACA,OACD,CAED,MAAO,CACLF,SAAS,CAAEF,MAAM,CAACE,SADb,CAELC,mBAAmB,CAAEH,MAAM,CAACG,mBAFvB,CAGLC,eAAe,CAAEJ,MAAM,CAACI,eAHnB,CAAP,CAKD,CAf2B,CAezB,CAACJ,MAAD,CAfyB,CAA5B,CAiBA,GAAMK,CAAAA,wBAAwB,CAAGhD,WAAW,sEAAC,yLACtC4C,YADsC,qEAKvClB,KAAK,CAACuB,cALiC,gEAOpBrC,CAAAA,oBAAoB,CACrCgC,YADqC,CAErClB,KAAK,CAACuB,cAF+B,CAGrCvB,KAAK,CAACwB,UAH+B,CAPA,QAOjCC,IAPiC,eAYvCrB,eAAe,CAACqB,IAAD,CAAf,CAZuC,uBAanBrC,CAAAA,YAAY,CAACY,KAAK,CAACwB,UAAP,CAAkBN,YAAY,CAACC,SAA/B,CAA0CM,IAA1C,SAA0CA,IAA1C,8BAA0CA,IAAI,CAAEC,KAAhD,6DAA0C,YAAaC,qBAAvD,gDAA0C,sBAAoCC,IAA9E,CAbO,SAanCC,OAbmC,eAcvCA,OAAO,CAAGvB,wBAAwB,CAAC,IAAD,CAA3B,CAAoCA,wBAAwB,CAAC,KAAD,CAAnE,CACAQ,UAAU,CAAC,KAAD,CAAV,CAfuC,iFAiBvCgB,OAAO,CAACC,GAAR,CAAY,kDAAZ,EACAD,OAAO,CAACC,GAAR,cAlBuC,qEAAD,GAqBzC,CAACb,YAAD,CAAelB,KAAK,CAACuB,cAArB,CAAqCvB,KAAK,CAACwB,UAA3C,CArByC,CAA5C,CAsBA,GAAIQ,CAAAA,QAAJ,CACAxC,SAAS,CACP,UAAM,CACJ8B,wBAAwB,GACzB,CAHM,CAIPU,QAAQ,CAAGA,QAAH,CAAc,IAJf,CAAT,CAMA,GAAMC,CAAAA,MAAM,2FAAG,2MAEX/B,gBAAgB,CAAC,IAAD,CAAhB,CACA,uBAAAgC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,uEAAsCC,KAAtC,GAHW,KAIPnB,MAAM,CAACoB,SAAP,EAAoBlC,YAApB,SAAoBA,YAApB,WAAoBA,YAAY,CAAEmC,OAAlC,EAA6CrB,MAAM,CAACE,SAJ7C,mDAMDhC,CAAAA,YAAY,CAACgB,YAAD,CAAec,MAAM,CAACE,SAAtB,CANX,QAKHoB,QALG,gBAOP,CAPO,EASLC,MATK,CASS,CAAEC,GAAG,CAAE,IAAP,CATT,KAULF,QAVK,mDAWQvD,CAAAA,qCAAqC,CAClDuD,QADkD,CAElDvC,KAAK,CAAC0C,SAF4C,CAGlD1C,KAAK,CAACwB,UAH4C,CAIlD,IAJkD,CAX7C,SAWPgB,MAXO,wBAmBT,GAAIA,MAAM,EAAI,CAACA,MAAM,CAACC,GAAtB,CAA2B,CACzB7B,aAAa,CAAC,CACZL,IAAI,CAAE,IADM,CAEZC,OAAO,CAAE,kCAFG,CAGZC,QAAQ,CAAE,SAHE,CAAD,CAAb,CAKD,CAND,IAMO,CACLG,aAAa,CAAC,CACZL,IAAI,CAAE,IADM,CAEZC,OAAO,CAAE,gCAFG,CAGZC,QAAQ,CAAE,OAHE,CAAD,CAAb,CAKD,CA/BQ,6FAkCPD,OAlCO,CAkCG,aAAMmC,GAAN,EAAa,mCAlChB,CAmCX,GAAI,CAAC,aAAMA,GAAX,CAAgB,CACd,GAAI,CAAC,aAAMnC,OAAX,CAAoB,CAClBA,OAAO,CAAG,wCAAV,CACD,CAFD,IAEO,IAAI,aAAMA,OAAN,CAAcoC,OAAd,CAAsB,OAAtB,CAAJ,CAAoC,CACzCpC,OAAO,YAAP,CACD,CAFM,IAEA,IAAI,aAAMA,OAAN,CAAcoC,OAAd,CAAsB,OAAtB,CAAJ,CAAoC,CACzCpC,OAAO,uDAAP,CACD,CACF,CARD,IAQO,CACL,GAAI,aAAMqC,IAAN,GAAe,GAAnB,CAAwB,CACtBrC,OAAO,YAAP,CACAsC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GACD,CAHD,IAGO,IAAI,aAAMH,IAAN,GAAe,GAAnB,CAAwB,CAC7BrC,OAAO,qCAAP,CACD,CACF,CAEDI,aAAa,CAAC,CACZL,IAAI,CAAE,IADM,CAEZC,OAAO,CAAPA,OAFY,CAGZC,QAAQ,CAAE,OAHE,CAAD,CAAb,CApDW,0BA0DXP,gBAAgB,CAAC,KAAD,CAAhB,CA1DW,yGAAH,kBAAN+B,CAAAA,MAAM,2CAAZ,CA8DA9D,SAAS,CAAC,UAAM,CACdmD,wBAAwB,GACzB,CAFQ,CAEN,CACDJ,YADC,CAEDlB,KAAK,CAACuB,cAFL,CAGDvB,KAAK,CAACwB,UAHL,CAIDF,wBAJC,CAFM,CAAT,CASA,mBACE,sCACE,MAAC,SAAD,EAAW,KAAK,CAAE,CAAE2B,SAAS,CAAE,EAAb,CAAlB,wBACE,MAAC,SAAD,EAAW,QAAQ,CAAC,IAApB,CAAyB,KAAK,CAAE,CAAEC,QAAQ,CAAE,UAAZ,CAAhC,wBACE,MAAC,WAAD,YACG,GADH,cAEE,YACE,GAAG,CAAExD,SADP,CAEE,GAAG,CAAC,EAFN,CAGE,KAAK,CAAC,MAHR,CAIE,KAAK,CAAE,CAAEyD,YAAY,CAAE,KAAhB,CAJT,EAFF,GADF,cAUE,KAAC,WAAD,wBACE,kCACE,YACE,GAAG,CAAE1D,UADP,CAEE,GAAG,CAAC,EAFN,CAGE,KAAK,CAAC,MAHR,CAIE,KAAK,CAAE,CAAE0D,YAAY,CAAE,MAAhB,CAJT,EADF,EADF,EAVF,cAqBE,KAAC,WAAD,WACG,CAAClC,MAAM,CAACoB,SAAR,cACC,KAAC,aAAD,6BADD,CAEGxB,OAAO,cACT,YACE,KAAK,CAAE,CACLuC,OAAO,CAAE,MADJ,CAELC,cAAc,CAAE,QAFX,CAGLC,KAAK,CAAE,MAHF,CADT,uBAOE,KAAC,gBAAD,IAPF,EADS,cAWT,wCACE,KAAC,MAAD,EAAQ,YAAY,CAAEnD,YAAtB,CAAoC,wBAAwB,CAAEmB,wBAA9D,EADF,cAEE,KAAC,aAAD,WACGnB,YAAY,OAAZ,EAAAA,YAAY,SAAZ,EAAAA,YAAY,CAAEuB,KAAd,CAAoB6B,QAApB,EACDpD,YADC,SACDA,YADC,WACDA,YAAY,CAAEuB,KAAd,CAAoB8B,UADnB,EAEDvC,MAAM,CAACE,SAFN,EAGDF,MAAM,CAACI,eAHN,cAIC,KAAC,eAAD,EACE,MAAM,CAAE,CACNF,SAAS,CACPF,MAAM,CAACE,SAAP,EACA,GAAItC,CAAAA,SAAJ,CAAcI,qBAAd,CAHI,CAIN;AACAoC,eAAe,CAAEJ,MAAM,CAACI,eALlB,CADV,CAQE,iBAAiB,CACflB,YADe,SACfA,YADe,sCACfA,YAAY,CAAEuB,KADC,qEACf,oBAAqB8B,UADN,gDACf,sBAAiCC,iBATrC,CAWE,UAAU,CAAE1C,MAXd,CAYE,OAAO,CAAE,CAAE2C,aAAa,CAAE,KAAjB,CAZX,uBAcE,KAAC,UAAD,EACE,YAAY,CAAEvD,YADhB,CAEE,SAAS,CAAEF,aAFb,CAGE,MAAM,CAAEgC,MAHV,CAIE,qBAAqB,CAAE5B,qBAJzB,EAdF,EAJD,cA0BC,KAAC,UAAD,EACE,YAAY,CAAEF,YADhB,CAEE,SAAS,CAAEF,aAFb,CAGE,MAAM,CAAEgC,MAHV,CAIE,qBAAqB,CAAE5B,qBAJzB,EA3BJ,EAFF,GAdJ,EArBF,GADF,cA8EE,KAAC,QAAD,EACE,IAAI,CAAEM,UAAU,CAACJ,IADnB,CAEE,gBAAgB,CAAE,IAFpB,CAGE,OAAO,CAAE,yBAAMK,CAAAA,aAAa,gCAAMD,UAAN,MAAkBJ,IAAI,CAAE,KAAxB,GAAnB,EAHX,uBAKE,KAAC,KAAD,EACE,OAAO,CAAE,yBAAMK,CAAAA,aAAa,gCAAMD,UAAN,MAAkBJ,IAAI,CAAE,KAAxB,GAAnB,EADX,CAEE,QAAQ,CAAEI,UAAU,CAACF,QAFvB,UAIGE,UAAU,CAACH,OAJd,EALF,EA9EF,GADF,EADF,CA+FD,CAjOD,CAmOA,cAAeT,CAAAA,IAAf","sourcesContent":["import { useEffect, useMemo, useState, useCallback } from \"react\";\r\nimport * as anchor from \"@project-serum/anchor\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { Container, Snackbar, CircularProgress } from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { PublicKey } from \"@solana/web3.js\";\r\nimport { useWallet } from \"@solana/wallet-adapter-react\";\r\nimport { WalletDialogButton } from \"@solana/wallet-adapter-material-ui\";\r\nimport {\r\n  awaitTransactionSignatureConfirmation,\r\n  CandyMachineAccount,\r\n  CANDY_MACHINE_PROGRAM,\r\n  getCandyMachineState,\r\n  mintOneToken,\r\n} from \"./candy-machine\";\r\nimport { AlertState } from \"./utils\";\r\nimport {checkWLToken } from \"./utils/checkWLToken\"\r\nimport { Header } from \"./Header\";\r\nimport { MintButton } from \"./MintButton\";\r\nimport { GatewayProvider } from \"@civic/solana-gateway-react\";\r\nimport { usePoller } from \"./hooks/usePoller\";\r\n\r\nconst IMAGE_LINK = \"/animation.gif\";\r\nconst LOGO_LINK = \"/logo.png\";\r\n\r\nconst ConnectButton = styled(WalletDialogButton)`\r\n  width: 100%;\r\n  height: 60px;\r\n  margin-top: 0px;\r\n  margin-bottom: 0px;\r\n  border-radius: 20px;\r\n  background: linear-gradient(29deg, #34342f 0%, #44c3a1 100%);\r\n  color: white;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst StyledPaper = styled(Paper)`\r\n  padding: 10px;\r\n  background: rgb(47,47,47);\r\n  background: linear-gradient(162deg, rgba(47,47,47,1) 0%, rgba(15,15,15,1) 100%);\r\n  border-radius: 30px;\r\n  margin: 10px;\r\n`;\r\nconst MintContainer = styled.div``; // add your owns styles here\r\n\r\nexport interface HomeProps {\r\n  candyMachineId?: anchor.web3.PublicKey;\r\n  connection: anchor.web3.Connection;\r\n  startDate: number;\r\n  txTimeout: number;\r\n  rpcHost: string;\r\n}\r\n\r\nconst Home = (props: HomeProps) => {\r\n  const [isUserMinting, setIsUserMinting] = useState(false);\r\n  const [candyMachine, setCandyMachine] = useState<CandyMachineAccount>();\r\n  const [userHasWhitelistToken, setUserHasWhitelistToken] = useState(false)\r\n  const [alertState, setAlertState] = useState<AlertState>({\r\n    open: false,\r\n    message: \"\",\r\n    severity: undefined,\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const rpcUrl = props.rpcHost;\r\n  const wallet = useWallet();\r\n\r\n  const anchorWallet = useMemo(() => {\r\n    if (\r\n      !wallet ||\r\n      !wallet.publicKey ||\r\n      !wallet.signAllTransactions ||\r\n      !wallet.signTransaction\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    return {\r\n      publicKey: wallet.publicKey,\r\n      signAllTransactions: wallet.signAllTransactions,\r\n      signTransaction: wallet.signTransaction,\r\n    } as anchor.Wallet;\r\n  }, [wallet]);\r\n\r\n  const refreshCandyMachineState = useCallback(async () => {\r\n    if (!anchorWallet ) {\r\n      return;\r\n    }\r\n\r\n    if (props.candyMachineId) {\r\n      try {\r\n        const cndy = await getCandyMachineState(\r\n          anchorWallet,\r\n          props.candyMachineId,\r\n          props.connection\r\n        );\r\n        setCandyMachine(cndy);\r\n        let WLToken = await checkWLToken(props.connection,anchorWallet.publicKey, cndy?.state?.whitelistMintSettings?.mint)\r\n        WLToken ? setUserHasWhitelistToken(true) : setUserHasWhitelistToken(false);\r\n        setLoading(false);\r\n      } catch (e) {\r\n        console.log(\"There was a problem fetching Candy Machine state\");\r\n        console.log(e);\r\n      }\r\n    }\r\n  }, [anchorWallet, props.candyMachineId, props.connection]);\r\n  var pollTime;\r\n  usePoller(\r\n    () => {\r\n      refreshCandyMachineState();\r\n    },\r\n    pollTime ? pollTime : 9999\r\n  );\r\n  const onMint = async () => {\r\n    try {\r\n      setIsUserMinting(true);\r\n      document.getElementById(\"#identity\")?.click();\r\n      if (wallet.connected && candyMachine?.program && wallet.publicKey) {\r\n        const mintTxId = (\r\n          await mintOneToken(candyMachine, wallet.publicKey)\r\n        )[0];\r\n\r\n        let status: any = { err: true };\r\n        if (mintTxId) {\r\n          status = await awaitTransactionSignatureConfirmation(\r\n            mintTxId,\r\n            props.txTimeout,\r\n            props.connection,\r\n            true\r\n          );\r\n        }\r\n\r\n        if (status && !status.err) {\r\n          setAlertState({\r\n            open: true,\r\n            message: \"Congratulations! Mint succeeded!\",\r\n            severity: \"success\",\r\n          });\r\n        } else {\r\n          setAlertState({\r\n            open: true,\r\n            message: \"Mint failed! Please try again!\",\r\n            severity: \"error\",\r\n          });\r\n        }\r\n      }\r\n    } catch (error: any) {\r\n      let message = error.msg || \"Minting failed! Please try again!\";\r\n      if (!error.msg) {\r\n        if (!error.message) {\r\n          message = \"Transaction Timeout! Please try again.\";\r\n        } else if (error.message.indexOf(\"0x137\")) {\r\n          message = `SOLD OUT!`;\r\n        } else if (error.message.indexOf(\"0x135\")) {\r\n          message = `Insufficient funds to mint. Please fund your wallet.`;\r\n        }\r\n      } else {\r\n        if (error.code === 311) {\r\n          message = `SOLD OUT!`;\r\n          window.location.reload();\r\n        } else if (error.code === 312) {\r\n          message = `Minting period hasn't started yet.`;\r\n        }\r\n      }\r\n\r\n      setAlertState({\r\n        open: true,\r\n        message,\r\n        severity: \"error\",\r\n      });\r\n    } finally {\r\n      setIsUserMinting(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshCandyMachineState();\r\n  }, [\r\n    anchorWallet,\r\n    props.candyMachineId,\r\n    props.connection,\r\n    refreshCandyMachineState,\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <Container style={{ marginTop: 30 }}>\r\n        <Container maxWidth=\"sm\" style={{ position: \"relative\" }}>\r\n          <StyledPaper>\r\n            {\" \"}\r\n            <img\r\n              src={LOGO_LINK}\r\n              alt=\"\"\r\n              width=\"100%\"\r\n              style={{ borderRadius: \"5px\" }}\r\n            />\r\n          </StyledPaper>\r\n          <StyledPaper>\r\n            <div>\r\n              <img\r\n                src={IMAGE_LINK}\r\n                alt=\"\"\r\n                width=\"100%\"\r\n                style={{ borderRadius: \"30px\" }}\r\n              />\r\n            </div>\r\n          </StyledPaper>\r\n\r\n          <StyledPaper>\r\n            {!wallet.connected ? (\r\n              <ConnectButton>Connect Wallet</ConnectButton>\r\n            ) : loading ? (\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  width: \"100%\",\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <Header candyMachine={candyMachine} refreshCandyMachineState={refreshCandyMachineState} />\r\n                <MintContainer>\r\n                  {candyMachine?.state.isActive &&\r\n                  candyMachine?.state.gatekeeper &&\r\n                  wallet.publicKey &&\r\n                  wallet.signTransaction ? (\r\n                    <GatewayProvider\r\n                      wallet={{\r\n                        publicKey:\r\n                          wallet.publicKey ||\r\n                          new PublicKey(CANDY_MACHINE_PROGRAM),\r\n                        //@ts-ignore\r\n                        signTransaction: wallet.signTransaction,\r\n                      }}\r\n                      gatekeeperNetwork={\r\n                        candyMachine?.state?.gatekeeper?.gatekeeperNetwork\r\n                      }\r\n                      clusterUrl={rpcUrl}\r\n                      options={{ autoShowModal: false }}\r\n                    >\r\n                      <MintButton\r\n                        candyMachine={candyMachine}\r\n                        isMinting={isUserMinting}\r\n                        onMint={onMint}\r\n                        userHasWhitelistToken={userHasWhitelistToken}\r\n                      />\r\n                    </GatewayProvider>\r\n                  ) : (\r\n                    <MintButton\r\n                      candyMachine={candyMachine}\r\n                      isMinting={isUserMinting}\r\n                      onMint={onMint}\r\n                      userHasWhitelistToken={userHasWhitelistToken}\r\n                    />\r\n                  )}\r\n                </MintContainer>\r\n              </>\r\n            )}\r\n          </StyledPaper>\r\n        </Container>\r\n\r\n        <Snackbar\r\n          open={alertState.open}\r\n          autoHideDuration={6000}\r\n          onClose={() => setAlertState({ ...alertState, open: false })}\r\n        >\r\n          <Alert\r\n            onClose={() => setAlertState({ ...alertState, open: false })}\r\n            severity={alertState.severity}\r\n          >\r\n            {alertState.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}